{
  "typeName": "VWS::RVS::ReceiveRule",
  "description": "Creates a rule to receive a RVS transfer into a S3 bucket.",
  "sourceUrl": "https://github.com/vwvws/vws-aws-rvs",
  "definitions": {},
  "properties": {
    "Id": {
      "description": "unique ID of the receive rule",
      "type": "string"
    },
    "Destination": {
      "type": "object",
      "description": "The location where received transfers are saved to.",
      "properties": {
        "S3BucketName": {
          "description": "The name of the Amazon S3 bucket.",
          "type": "string"
        },
        "S3BucketPrefix": {
          "description": "An optional prefix to be used when saving files into the S3 bucket. If none is specified, transfers will be placed at the root level of the bucket.",
          "type": "string"
        },
        "RoleArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of a role to assume that can write to the location.",
          "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*"
        }
      },
      "required": [
        "S3BucketName",
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "Transfer": {
      "type": "object",
      "description": "Specifies the RVS transfer parameter.",
      "properties": {
        "VDSN": {
          "type": "string",
          "description": "The virtual data set name (filename) used in the RVS transfer. The VDSN must be unique and must not be used in another Receive Rule. You must either specify `VDSN` or `VDSNPrefix`, but not both.",
          "pattern": "^[QED][A-Z0-9]{2}\\.[A-Z0-9]{6}\\.[.\\-\\/()&A-Z0-9]{1,15}$"
        },
        "VDSNPrefix": {
          "type": "string",
          "description": "A prefix for the virtual data set name (filename) of RVS transfers this receive rule will match for. A receive rule with a VDSN prefix will match all transfers received that start with it. The prefix must not conflict with other prefixes or other VDSN. You must either specify `VDSN` or `VDSNPrefix`, but not both.",
          "pattern": "^[QED][A-Z0-9]{2}\\.[A-Z0-9]{6}\\.[.\\-\\/()&A-Z0-9]{5,15}$"
        }
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "required": [
            "VDSN"
          ]
        },
        {
          "required": [
            "VDSNPrefix"
          ]
        }
      ]
    },
    "CharsetConversion": {
      "type": "string",
      "description": "Charset conversion that should be applied on the received transfer.",
      "enum": [
        "ANSI-IBM037",
        "ANSI-IBM273",
        "ASCII-IBM037",
        "ASCII-IBM273",
        "ASCII-IBM500",
        "IBM037-ANSI",
        "IBM037-ASCII",
        "IBM273-ANSI",
        "IBM273-ASCII",
        "IBM500-ASCII"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "Destination",
    "Transfer"
  ],
  "readOnlyProperties": [
    "/properties/Id"
  ],
  "createOnlyProperties": [
    "/properties/Transfer/VDSN",
    "/properties/Transfer/VDSNPrefix"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "execute-api:Invoke"
      ]
    },
    "read": {
      "permissions": [
        "execute-api:Invoke"
      ]
    },
    "update": {
      "permissions": [
        "execute-api:Invoke"
      ]
    },
    "delete": {
      "permissions": [
        "execute-api:Invoke"
      ]
    }
  }
}
