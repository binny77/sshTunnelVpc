#!/bin/bash

# ID of #vanguard-cdk channel (until the name changes and the ID stays the same)
channel="C01EH6AR18D" # vanguard-cdk

# get release information from github
gh release view --json tagName,url,body > response.json

cat response.json

releaseNumber=$(jq -r .tagName response.json)
releaseUrl=$(jq -r .url response.json)
release_message=$(jq -n --arg channel "$channel" --arg releaseNumber "$releaseNumber" --arg releaseUrl "$releaseUrl" -f release_message.jq)

# send release message and remember id for creating a thread
ts=$(curl -X POST -H "Authorization: Bearer ${slackbot_oauth_token}" -H "Accept: application/json" -H 'Content-type: application/json; charset=utf-8' --data "$release_message" https://slack.com/api/chat.postMessage | jq -r .ts)

# create beautiful links for pull-requests
# * Make SharedVpc usable as normal class by @tenjaa in https://github.com/vw-sre/vws-cdk/pull/426
# ðŸ‘‡
# * Make SharedVpc usable as normal class by @tenjaa in <https://github.com/vw-sre/vws-cdk/pull/426|#426>
jq -r .body response.json | sed -r -e 's/(.*)(https.*)\/([0-9]+)/\1<\2\/\3|#\3>/g' > details_text

# nicer bullet points
sed -i'' -r -e 's/\* /â€¢ /g' details_text

# make header fat
sed -i'' -r -e 's/## (.*)\r/\*\1\*/g' details_text

# remove last three lines in the best possible way
sed -i'' '$d' details_text
sed -i'' '$d' details_text
sed -i'' '$d' details_text

text=$(< details_text)
details_message=$(jq -n --arg channel "$channel" --arg ts "$ts" --arg text "$text" -f release_details.jq)
#
## send details as a thread
curl -X POST -H "Authorization: Bearer ${slackbot_oauth_token}" -H "Accept: application/json" -H 'Content-type: application/json; charset=utf-8' --data "$details_message" https://slack.com/api/chat.postMessage
