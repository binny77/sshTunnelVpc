"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VwsSlackbot = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const aws_events_1 = require("aws-cdk-lib/aws-events");
const aws_events_targets_1 = require("aws-cdk-lib/aws-events-targets");
const aws_lambda_1 = require("aws-cdk-lib/aws-lambda");
const aws_sam_1 = require("aws-cdk-lib/aws-sam");
const constructs_1 = require("constructs");
const shared_vpc_1 = require("../vws/shared-vpc");
/**
 * @experimental
 */
class VwsSlackbot extends constructs_1.Construct {
    constructor(scope, id, props) {
        super(scope, id);
        this.scope = scope;
        this.id = id;
        const vpc = new shared_vpc_1.SharedVpc(this, 'SharedVpc').vpc;
        const cfnMapping = new aws_cdk_lib_1.CfnMapping(this, 'Regions', {
            mapping: {
                'us-west-2': {
                    id: 'arn:aws:serverlessrepo:us-west-2:637378239786:applications/vws-aws-slack-bot',
                },
                'us-east-1': {
                    id: 'arn:aws:serverlessrepo:us-east-1:637378239786:applications/vws-aws-slack-bot',
                },
                'eu-west-1': {
                    id: 'arn:aws:serverlessrepo:eu-west-1:637378239786:applications/vws-aws-slack-bot',
                },
                'eu-central-1': {
                    id: 'arn:aws:serverlessrepo:eu-central-1:637378239786:applications/vws-aws-slack-bot',
                },
                'ap-south-1': {
                    id: 'arn:aws:serverlessrepo:ap-south-1:637378239786:applications/vws-aws-slack-bot',
                },
                'ap-southeast-1': {
                    id: 'arn:aws:serverlessrepo:ap-southeast-1:637378239786:applications/vws-aws-slack-bot',
                },
                'ap-northeast-2': {
                    id: 'arn:aws:serverlessrepo:ap-northeast-2:637378239786:applications/vws-aws-slack-bot',
                },
            },
        });
        const cfnApplication = new aws_sam_1.CfnApplication(this, 'SlackBot', {
            location: {
                applicationId: cfnMapping.findInMap(aws_cdk_lib_1.Aws.REGION, 'id'),
                semanticVersion: '1.0.8',
            },
            parameters: {
                VpcId: vpc.vpcId,
                SubnetId: vpc.selectSubnets().subnetIds[0],
                WebhookSecretArn: props.webhookSecret.secretArn,
                ProxyUrl: props.proxyUrl,
            },
        });
        const slackbotLambda = aws_lambda_1.Function.fromFunctionName(this, 'Function', cfnApplication.getAtt('Outputs.LambdaFunction').toString());
        props.conditions.forEach(({ event, message }, index) => {
            new aws_events_1.Rule(this, `Rule${index}`, Object.assign({ enabled: true, targets: [new aws_events_targets_1.LambdaFunction(slackbotLambda, {
                        event: aws_events_1.RuleTargetInput.fromObject({
                            channel: props.slackChannel,
                            username: props.slackUser,
                            attachments: [message],
                        }),
                    })] }, event));
        });
    }
    static createPipelineFailedCondition() {
        return {
            event: {
                description: 'EventRule',
                eventPattern: {
                    detail: {
                        state: ['FAILED'],
                    },
                    detailType: ['CodePipeline Pipeline Execution State Change'],
                    source: ['aws.codepipeline'],
                },
            },
            message: {
                title: `CodePipeline ${aws_events_1.EventField.fromPath('$.detail.state')}`,
                color: 'danger',
                fields: [{
                        title: 'Pipeline',
                        value: aws_events_1.EventField.fromPath('$.detail.pipeline'),
                        short: false,
                    }, {
                        title: 'Account',
                        value: aws_events_1.EventField.account,
                        short: true,
                    }, {
                        title: 'Region',
                        value: aws_events_1.EventField.region,
                        short: true,
                    }],
            },
        };
    }
    static createAlarmCondition(alarmName) {
        return {
            event: {
                description: 'EventRule',
                eventPattern: {
                    detail: {
                        alarmName: [alarmName],
                        state: {
                            value: ['ALARM'],
                        },
                    },
                    detailType: ['CloudWatch Alarm State Change'],
                    source: ['aws.cloudwatch'],
                },
            },
            message: {
                title: `Alarm ${aws_events_1.EventField.fromPath('$.detail.alarmName')}`,
                color: 'danger',
                fields: [{
                        title: 'Reason',
                        value: aws_events_1.EventField.fromPath('$.detail.state.reason'),
                        short: false,
                    }, {
                        title: 'Account',
                        value: aws_events_1.EventField.account,
                        short: true,
                    }, {
                        title: 'Region',
                        value: aws_events_1.EventField.region,
                        short: true,
                    }],
            },
        };
    }
}
exports.VwsSlackbot = VwsSlackbot;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidndzLXNsYWNrYm90LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidndzLXNsYWNrYm90LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUFxRDtBQUNyRCx1REFBc0Y7QUFDdEYsdUVBQWdFO0FBQ2hFLHVEQUFrRDtBQUNsRCxpREFBcUQ7QUFFckQsMkNBQXVDO0FBQ3ZDLGtEQUE4QztBQXdGOUM7O0dBRUc7QUFDSCxNQUFhLFdBQVksU0FBUSxzQkFBUztJQXFFeEMsWUFDcUIsS0FBWSxFQUNaLEVBQVUsRUFDN0IsS0FBdUI7UUFFdkIsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUpFLFVBQUssR0FBTCxLQUFLLENBQU87UUFDWixPQUFFLEdBQUYsRUFBRSxDQUFRO1FBSzdCLE1BQU0sR0FBRyxHQUFHLElBQUksc0JBQVMsQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBRWpELE1BQU0sVUFBVSxHQUFHLElBQUksd0JBQVUsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFO1lBQ2pELE9BQU8sRUFBRTtnQkFDUCxXQUFXLEVBQUU7b0JBQ1gsRUFBRSxFQUFFLDhFQUE4RTtpQkFDbkY7Z0JBQ0QsV0FBVyxFQUFFO29CQUNYLEVBQUUsRUFBRSw4RUFBOEU7aUJBQ25GO2dCQUNELFdBQVcsRUFBRTtvQkFDWCxFQUFFLEVBQUUsOEVBQThFO2lCQUNuRjtnQkFDRCxjQUFjLEVBQUU7b0JBQ2QsRUFBRSxFQUFFLGlGQUFpRjtpQkFDdEY7Z0JBQ0QsWUFBWSxFQUFFO29CQUNaLEVBQUUsRUFBRSwrRUFBK0U7aUJBQ3BGO2dCQUNELGdCQUFnQixFQUFFO29CQUNoQixFQUFFLEVBQUUsbUZBQW1GO2lCQUN4RjtnQkFDRCxnQkFBZ0IsRUFBRTtvQkFDaEIsRUFBRSxFQUFFLG1GQUFtRjtpQkFDeEY7YUFDRjtTQUNGLENBQUMsQ0FBQztRQUVILE1BQU0sY0FBYyxHQUFHLElBQUksd0JBQWMsQ0FBQyxJ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