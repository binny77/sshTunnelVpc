import { Duration } from 'aws-cdk-lib';
import { Certificate } from 'aws-cdk-lib/aws-certificatemanager';
import { IVpc, SecurityGroup, SubnetSelection } from 'aws-cdk-lib/aws-ec2';
import { ApplicationListener, ApplicationLoadBalancer, IApplicationTargetGroup } from 'aws-cdk-lib/aws-elasticloadbalancingv2';
import { Construct } from 'constructs';
import { Domain } from '../vws/domain';
/**
 * Properties for VwsIngress construct
 */
export interface VwsIngressProperties {
    /**
     * vpc for the LoadBalancer
     */
    readonly vpc: IVpc;
    /**
     * if true protects the LoadBalancer with a KUMS Login
     */
    readonly includeLogin: boolean;
    /**
     * a vws domain
     */
    readonly domain: Domain;
    /**
     * certificate for https
     */
    readonly certificates: Certificate[];
    /**
     * Loadbalancer target group eg. a Lambda function
     */
    readonly targetGroups: IApplicationTargetGroup[];
    /**
     * subnets in given vpc
     * @default public subnets
     */
    readonly vpcSubnets?: SubnetSelection;
    /**
     * retention time of logs in s3 bucket
     * duration should be days
     */
    readonly logRetention: Duration;
    /**
     * for e.g. VWS1.0 routes
     */
    readonly additionalIdpCallbackUrls?: string[];
}
/**
 * VwsIngress construct
 *
 * Creates:
 * - log s3 Bucket for LoadBalancer logs
 * - security group for the LoadBalancer
 * - LoadBalancer
 * - LoadBalancer Listener with or without KUMS login protection
 * - Loadbalancer alias in a given domain
 *
 * @deprecated
 * @see https://github.com/vw-sre/vws-cdk/tree/main/lib/modules/vws-ingress-V2.ts
 */
export declare class VwsIngress extends Construct {
    readonly loadBalancer: ApplicationLoadBalancer;
    /**
     * The SecurityGroup attached to the LoadBalancer
     */
    readonly securityGroup: SecurityGroup;
    /**
     * The ApplicationListener which associates the TargetGroup with the LoadBalancer
     */
    readonly applicationListener: ApplicationListener;
    constructor(scope: Construct, id: string, props: VwsIngressProperties);
}
