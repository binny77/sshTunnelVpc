import { ISubnet, IVpc } from 'aws-cdk-lib/aws-ec2';
import { Construct } from 'constructs';
export interface ConnectivityVPCProps {
    /**
       * Size of the allocated network CIDR range.
       */
    readonly size: 24 | 25 | 26;
    /**
       * List of Availability zones to create subnets in
       */
    readonly azs: string[];
    /**
     * Pool to allocated network range from.
     * See https://docs.vwapps.cloud/vws-vanguard/services/resources/connectivity/networks/ for a list of available
     * networks/pools
     */
    readonly pool: 'intranet' | 'shared' | string;
    /**
     * When using egress DNS needs to be resolvable.
     * This adds the required DNS resolvers.
     */
    readonly dnsResolvers?: boolean;
}
/**
 * This Contruct provides a VPC with public and isolated subnets with cidr: 10.0.0.0/16.
 * In addition the VPC contains subnets within a VWS::Network cidr range and a transit gateway connection.
 *
 * To deploy your components into specific subnets please use the exposed subnet
 * lists instead accessing them via the exposed vpc!
 * @experimental
 */
export declare class ConnectivityVPC extends Construct {
    /**
       * Created vpc with cidr range 10.0.0.0/16
       * The exposed vpc was created from attributes containing only subnets
       */
    readonly vpc: IVpc;
    /**
       * Ingress subnet with attached internet gateway; cidr range 10.0.x.0/24
       */
    readonly ingressSubnets: ISubnet[];
    /**
       * Isolated app subnet; cidr range 10.0.x.0/24
       */
    readonly appSubnets: ISubnet[];
    /**
       * VWS::Connectivity subnet with attached transit gateway setup; cidr range of VWS::Network
       */
    readonly connectivitySubnets: ISubnet[];
    constructor(scope: Construct, id: string, props: ConnectivityVPCProps);
}
