"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllowedSuffixes = exports.CfnProxyCredentials = exports.CfnProxy = void 0;
/**
 * @field allowedSuffixes: list of allowed DNS suffixes
 * @field allowedCidrs: list of allowed target CIDR ranges
 * @field allowedPorts: list of ports allowed to connect to
 */
const aws_cdk_lib_1 = require("aws-cdk-lib");
/**
 * VWS proxy service instance. Provides a VPC endpoint service name after creation.
 *
 * @deprecated A custom L2 construct will be provided soon
 * @see https://github.com/vw-sre/vws-cdk/issues/409
 */
class CfnProxy extends aws_cdk_lib_1.CfnResource {
    constructor(scope, id, properties) {
        if (properties.allowedPorts.length == 0 || (properties.allowedCidrs.length == 0 && properties.allowedSuffixes.length == 0)) {
            throw new Error('validation error: either cidrs and/or dns suffixes and ports required');
        }
        super(scope, id, {
            type: 'VWS::Proxy::Instance',
            properties: {
                AllowedSuffixes: aws_cdk_lib_1.Lazy.list({ produce: () => properties.allowedSuffixes }, { omitEmpty: true }),
                AllowedCidrs: aws_cdk_lib_1.Lazy.list({ produce: () => properties.allowedCidrs }, { omitEmpty: true }),
                AllowedPorts: aws_cdk_lib_1.Lazy.list({ produce: () => properties.allowedPorts.map(it => `${it}`) }, { omitEmpty: true }),
            },
        });
    }
    /**
       * returns proxy VPC endpoint service name
       */
    get serviceName() {
        return super.getAtt('ServiceName').toString();
    }
    /**
       * returns private proxy endpoint dns name
       */
    get dnsName() {
        return super.getAtt('DnsName').toString();
    }
}
exports.CfnProxy = CfnProxy;
/**
 * Generates a secret/password for a proxy user and stores it in AWS SecretsManager.
 *
 * In order to be able to access the secret a principal need the following permission in their policy:
 - Effect: Allow
 Action:
 - kms:Decrypt
 - kms:DescribeKey
 Resource: !Sub 'arn:aws:kms:${AWS::Region}:637378239786:key/*'

 @deprecated A custom L2 construct will be provided soon
 @see https://github.com/vw-sre/vws-cdk/issues/409
 */
class CfnProxyCredentials extends aws_cdk_lib_1.CfnResource {
    constructor(scope, id, properties) {
        super(scope, id, {
            type: 'VWS::Proxy::Credentials',
            properties: {
                Principals: properties.principals,
                Instance: { Ref: properties.instance.logicalId },
            },
        });
    }
    /**
       * id returns the proxy credential id
       */
    get id() {
        return super.getAtt('Id').toString();
    }
    /**
       * secretsArn returns the AWS SecretsManager Arn for the secret containing the proxy password
       */
    get secretsArn() {
        return super.getAtt('SecretArn').toString();
    }
}
exports.CfnProxyCredentials = CfnProxyCredentials;
/**
 * Collection of default suffixes
 *
 * @deprecated
 */
class AllowedSuffixes {
}
exports.AllowedSuffixes = AllowedSuffixes;
AllowedSuffixes.ALPINE_PACKAGES = ['alpine.global.ssl.fastly.net', 'dl-cdn.alpinelinux.org'];
AllowedSuffixes.DOCKER = ['docker.io', 'docker.com'];
AllowedSuffixes.GITHUB = ['github.com', 'githubusercontent.com', 'ghcr.io'];
AllowedSuffixes.NEW_RELIC = ['newrelic.com', 'newrelic.eu'];
AllowedSuffixes.NPM = ['npmjs.org', 'yarnpkg.com'];
AllowedSuffixes.PYTHON = ['pypi.python.org', 'pypi.org', 'files.pythonhosted.org'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2ZuLXByb3h5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2ZuLXByb3h5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7O0dBSUc7QUFDSCw2Q0FBZ0Q7QUFTaEQ7Ozs7O0dBS0c7QUFDSCxNQUFhLFFBQVMsU0FBUSx5QkFBVztJQUN2QyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLFVBQTJCO1FBQ25FLElBQUksVUFBVSxDQUFDLFlBQVksQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUFJLFVBQVUsQ0FBQyxlQUFlLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxFQUFFO1lBQzFILE1BQU0sSUFBSSxLQUFLLENBQUMsdUVBQXVFLENBQUMsQ0FBQztTQUMxRjtRQUNELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQ2YsSUFBSSxFQUFFLHNCQUFzQjtZQUM1QixVQUFVLEVBQUU7Z0JBQ1YsZUFBZSxFQUFFLGtCQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxlQUFlLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDOUYsWUFBWSxFQUFFLGtCQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDeEYsWUFBWSxFQUFFLGtCQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUM7YUFDNUc7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7O1NBRUs7SUFDTCxJQUFXLFdBQVc7UUFDcEIsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2hELENBQUM7SUFFRDs7U0FFSztJQUNMLElBQVcsT0FBTztRQUNoQixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDNUMsQ0FBQztDQUNGO0FBNUJELDRCQTRCQztBQVdEOzs7Ozs7Ozs7Ozs7R0FZRztBQUNILE1BQWEsbUJBQW9CLFNBQVEseUJBQVc7SUFDbEQsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxVQUFzQztRQUM5RSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUNmLElBQUksRUFBRSx5QkFBeUI7WUFDL0IsVUFBVSxFQUFFO2dCQUNWLFVBQVUsRUFBRSxVQUFVLENBQUMsVUFBVTtnQkFDakMsUUFBUSxFQUFFLEVBQUUsR0FBRyxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFO2FBQ2pEO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztTQUVLO0lBQ0wsSUFBVyxFQUFFO1FBQ1gsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7SUFFRDs7U0FFSztJQUNMLElBQVcsVUFBVTtRQUNuQixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDOUMsQ0FBQztDQUNGO0FBeEJELGtEQXdCQztBQUVEOzs7O0dBSUc7QUFDSCxNQUFzQixlQUFlOztBQUFyQywwQ0FPQztBQU5pQiwrQkFBZSxHQUFHLENBQUMsOEJBQThCLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztBQUM3RSxzQkFBTSxHQUFHLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQ3JDLHNCQUFNLEdBQUcsQ0FBQyxZQUFZLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUQseUJBQVMsR0FBRyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUM1QyxtQkFBRyxHQUFHLENBQUMsV0FBVyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBQ25DLHNCQUFNLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxVQUFVLEVBQUUsd0JBQXdCLENBQUMsQ0FBQyJ9