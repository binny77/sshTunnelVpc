import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';
/**
 * VWS proxy service instance. Provides a VPC endpoint service name after creation.
 *
 * @schema CfnInstanceProps
 */
export interface CfnInstanceProps {
    /**
     * list of allowed DNS suffixes
     *
     * @schema CfnInstanceProps#AllowedSuffixes
     */
    readonly allowedSuffixes?: string[];
    /**
     * list of allowed target CIDR ranges
     *
     * @schema CfnInstanceProps#AllowedCidrs
     */
    readonly allowedCidrs?: string[];
    /**
     * list of ports allowed to connect to
     *
     * @schema CfnInstanceProps#AllowedPorts
     */
    readonly allowedPorts?: number[];
    /**
     * internal property for test and debug purposes
     *
     * @schema CfnInstanceProps#Environment
     */
    readonly environment?: string;
}
/**
 * Converts an object of type 'CfnInstanceProps' to JSON representation.
 */
export declare function toJson_CfnInstanceProps(obj: CfnInstanceProps | undefined): Record<string, any> | undefined;
/**
 * A CloudFormation `VWS::Proxy::Instance`
 *
 * @cloudformationResource VWS::Proxy::Instance
 * @stability external
 */
export declare class CfnInstance extends cdk.CfnResource {
    /**
    * The CloudFormation resource type name for this resource class.
    */
    static readonly CFN_RESOURCE_TYPE_NAME = "VWS::Proxy::Instance";
    /**
     * Resource props.
     */
    readonly props: CfnInstanceProps;
    /**
     * Attribute `VWS::Proxy::Instance.Id`
     */
    readonly attrId: string;
    /**
     * Attribute `VWS::Proxy::Instance.ServiceName`
     */
    readonly attrServiceName: string;
    /**
     * Attribute `VWS::Proxy::Instance.DnsName`
     */
    readonly attrDnsName: string;
    /**
     * Create a new `VWS::Proxy::Instance`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: constructs.Construct, id: string, props: CfnInstanceProps);
}
