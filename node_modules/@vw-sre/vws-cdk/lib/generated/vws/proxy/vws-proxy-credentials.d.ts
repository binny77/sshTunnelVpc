import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';
/**
 * Provides credentials for the VWS proxy service.
 *
 * @schema CfnCredentialsProps
 */
export interface CfnCredentialsProps {
    /**
     * proxy instance id
     *
     * @schema CfnCredentialsProps#Instance
     */
    readonly instance: string;
    /**
     * list of AWS principals (ARNs) allowed to access the proxy credential
     *
     * @schema CfnCredentialsProps#Principals
     */
    readonly principals: string[];
    /**
     * internal property for test and debug purposes
     *
     * @schema CfnCredentialsProps#Environment
     */
    readonly environment?: string;
}
/**
 * Converts an object of type 'CfnCredentialsProps' to JSON representation.
 */
export declare function toJson_CfnCredentialsProps(obj: CfnCredentialsProps | undefined): Record<string, any> | undefined;
/**
 * A CloudFormation `VWS::Proxy::Credentials`
 *
 * @cloudformationResource VWS::Proxy::Credentials
 * @stability external
 */
export declare class CfnCredentials extends cdk.CfnResource {
    /**
    * The CloudFormation resource type name for this resource class.
    */
    static readonly CFN_RESOURCE_TYPE_NAME = "VWS::Proxy::Credentials";
    /**
     * Resource props.
     */
    readonly props: CfnCredentialsProps;
    /**
     * Attribute `VWS::Proxy::Credentials.Id`
     */
    readonly attrId: string;
    /**
     * Attribute `VWS::Proxy::Credentials.SecretArn`
     */
    readonly attrSecretArn: string;
    /**
     * Attribute `VWS::Proxy::Credentials.KmsKeyArn`
     */
    readonly attrKmsKeyArn: string;
    /**
     * Create a new `VWS::Proxy::Credentials`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: constructs.Construct, id: string, props: CfnCredentialsProps);
}
