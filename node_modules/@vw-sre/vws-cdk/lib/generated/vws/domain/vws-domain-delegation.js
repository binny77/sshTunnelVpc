"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CfnDelegation = exports.toJson_CfnDelegationProps = void 0;
// Generated by cdk-import
const cdk = require("aws-cdk-lib");
/**
 * Converts an object of type 'CfnDelegationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnDelegationProps(obj) {
    var _a;
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Domain': obj.domain,
        'Nameservers': (_a = obj.nameservers) === null || _a === void 0 ? void 0 : _a.map(y => y),
        'HostedZone': obj.hostedZone,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnDelegationProps = toJson_CfnDelegationProps;
/* eslint-enable max-len, quote-props */
/**
 * A CloudFormation `VWS::Domain::Delegation`
 *
 * @cloudformationResource VWS::Domain::Delegation
 * @stability external
 */
class CfnDelegation extends cdk.CfnResource {
    /**
     * Create a new `VWS::Domain::Delegation`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope, id, props) {
        super(scope, id, { type: CfnDelegation.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnDelegationProps(props) });
        this.props = props;
    }
}
exports.CfnDelegation = CfnDelegation;
/**
* The CloudFormation resource type name for this resource class.
*/
CfnDelegation.CFN_RESOURCE_TYPE_NAME = "VWS::Domain::Delegation";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidndzLWRvbWFpbi1kZWxlZ2F0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidndzLWRvbWFpbi1kZWxlZ2F0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBCQUEwQjtBQUMxQixtQ0FBbUM7QUFnQ25DOztHQUVHO0FBQ0gseUNBQXlDO0FBQ3pDLFNBQWdCLHlCQUF5QixDQUFDLEdBQW1DOztJQUMzRSxJQUFJLEdBQUcsS0FBSyxTQUFTLEVBQUU7UUFBRSxPQUFPLFNBQVMsQ0FBQztLQUFFO0lBQzVDLE1BQU0sTUFBTSxHQUFHO1FBQ2IsUUFBUSxFQUFFLEdBQUcsQ0FBQyxNQUFNO1FBQ3BCLGFBQWEsRUFBRSxNQUFBLEdBQUcsQ0FBQyxXQUFXLDBDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMzQyxZQUFZLEVBQUUsR0FBRyxDQUFDLFVBQVU7S0FDN0IsQ0FBQztJQUNGLDBCQUEwQjtJQUMxQixPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsaUNBQU0sQ0FBQyxLQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDMUcsQ0FBQztBQVRELDhEQVNDO0FBQ0Qsd0NBQXdDO0FBR3hDOzs7OztHQUtHO0FBQ0gsTUFBYSxhQUFjLFNBQVEsR0FBRyxDQUFDLFdBQVc7SUFZaEQ7Ozs7OztPQU1HO0lBQ0gsWUFBWSxLQUEyQixFQUFFLEVBQVUsRUFBRSxLQUF5QjtRQUM1RSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxhQUFhLENBQUMsc0JBQXNCLEVBQUUsVUFBVSxFQUFFLHlCQUF5QixDQUFDLEtBQUssQ0FBRSxFQUFFLENBQUMsQ0FBQztRQUVoSCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUVyQixDQUFDOztBQXhCSCxzQ0F5QkM7QUF4QkM7O0VBRUU7QUFDcUIsb0NBQXNCLEdBQUcseUJBQXlCLENBQUMifQ==