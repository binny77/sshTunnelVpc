import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';
/**
 * Delegates a vwapps.run subdomain to a set of nameservers
 *
 * @schema CfnDelegationProps
 */
export interface CfnDelegationProps {
    /**
     * FQDN of the subdomain to delegate. The domain must have been allocated to the same AWS account or else the delegation will fail.
     *
     * @schema CfnDelegationProps#Domain
     */
    readonly domain: string;
    /**
     * Set of nameservers the domain should be delegated to.
     *
     * @schema CfnDelegationProps#Nameservers
     */
    readonly nameservers?: string[];
    /**
     * Id of the private hosted zone that should be exposed.
     *
     * @schema CfnDelegationProps#HostedZone
     */
    readonly hostedZone?: string;
}
/**
 * Converts an object of type 'CfnDelegationProps' to JSON representation.
 */
export declare function toJson_CfnDelegationProps(obj: CfnDelegationProps | undefined): Record<string, any> | undefined;
/**
 * A CloudFormation `VWS::Domain::Delegation`
 *
 * @cloudformationResource VWS::Domain::Delegation
 * @stability external
 */
export declare class CfnDelegation extends cdk.CfnResource {
    /**
    * The CloudFormation resource type name for this resource class.
    */
    static readonly CFN_RESOURCE_TYPE_NAME = "VWS::Domain::Delegation";
    /**
     * Resource props.
     */
    readonly props: CfnDelegationProps;
    /**
     * Create a new `VWS::Domain::Delegation`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: constructs.Construct, id: string, props: CfnDelegationProps);
}
