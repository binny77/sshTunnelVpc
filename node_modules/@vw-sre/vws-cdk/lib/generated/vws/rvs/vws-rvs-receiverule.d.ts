import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';
/**
 * Creates a rule to receive a RVS transfer into a S3 bucket.
 *
 * @schema CfnReceiveRuleProps
 */
export interface CfnReceiveRuleProps {
    /**
     * The location where received transfers are saved to.
     *
     * @schema CfnReceiveRuleProps#Destination
     */
    readonly destination: CfnReceiveRulePropsDestination;
    /**
     * Specifies the RVS transfer parameter.
     *
     * @schema CfnReceiveRuleProps#Transfer
     */
    readonly transfer: CfnReceiveRulePropsTransfer;
    /**
     * Charset conversion that should be applied on the received transfer.
     *
     * @schema CfnReceiveRuleProps#CharsetConversion
     */
    readonly charsetConversion?: CfnReceiveRulePropsCharsetConversion;
}
/**
 * Converts an object of type 'CfnReceiveRuleProps' to JSON representation.
 */
export declare function toJson_CfnReceiveRuleProps(obj: CfnReceiveRuleProps | undefined): Record<string, any> | undefined;
/**
 * The location where received transfers are saved to.
 *
 * @schema CfnReceiveRulePropsDestination
 */
export interface CfnReceiveRulePropsDestination {
    /**
     * The name of the Amazon S3 bucket.
     *
     * @schema CfnReceiveRulePropsDestination#S3BucketName
     */
    readonly s3BucketName: string;
    /**
     * An optional prefix to be used when saving files into the S3 bucket. If none is specified, transfers will be placed at the root level of the bucket.
     *
     * @schema CfnReceiveRulePropsDestination#S3BucketPrefix
     */
    readonly s3BucketPrefix?: string;
    /**
     * The Amazon Resource Name (ARN) of a role to assume that can write to the location.
     *
     * @schema CfnReceiveRulePropsDestination#RoleArn
     */
    readonly roleArn: string;
}
/**
 * Converts an object of type 'CfnReceiveRulePropsDestination' to JSON representation.
 */
export declare function toJson_CfnReceiveRulePropsDestination(obj: CfnReceiveRulePropsDestination | undefined): Record<string, any> | undefined;
/**
 * Specifies the RVS transfer parameter.
 *
 * @schema CfnReceiveRulePropsTransfer
 */
export interface CfnReceiveRulePropsTransfer {
    /**
     * The virtual data set name (filename) used in the RVS transfer. The VDSN must be unique and must not be used in another Receive Rule. You must either specify `VDSN` or `VDSNPrefix`, but not both.
     *
     * @schema CfnReceiveRulePropsTransfer#VDSN
     */
    readonly vdsn?: string;
    /**
     * A prefix for the virtual data set name (filename) of RVS transfers this receive rule will match for. A receive rule with a VDSN prefix will match all transfers received that start with it. The prefix must not conflict with other prefixes or other VDSN. You must either specify `VDSN` or `VDSNPrefix`, but not both.
     *
     * @schema CfnReceiveRulePropsTransfer#VDSNPrefix
     */
    readonly vdsnPrefix?: string;
}
/**
 * Converts an object of type 'CfnReceiveRulePropsTransfer' to JSON representation.
 */
export declare function toJson_CfnReceiveRulePropsTransfer(obj: CfnReceiveRulePropsTransfer | undefined): Record<string, any> | undefined;
/**
 * Charset conversion that should be applied on the received transfer.
 *
 * @schema CfnReceiveRulePropsCharsetConversion
 */
export declare enum CfnReceiveRulePropsCharsetConversion {
    /** ANSI-IBM037 */
    ANSI_IBM037 = "ANSI-IBM037",
    /** ANSI-IBM273 */
    ANSI_IBM273 = "ANSI-IBM273",
    /** ASCII-IBM037 */
    ASCII_IBM037 = "ASCII-IBM037",
    /** ASCII-IBM273 */
    ASCII_IBM273 = "ASCII-IBM273",
    /** ASCII-IBM500 */
    ASCII_IBM500 = "ASCII-IBM500",
    /** IBM037-ANSI */
    IBM037_ANSI = "IBM037-ANSI",
    /** IBM037-ASCII */
    IBM037_ASCII = "IBM037-ASCII",
    /** IBM273-ANSI */
    IBM273_ANSI = "IBM273-ANSI",
    /** IBM273-ASCII */
    IBM273_ASCII = "IBM273-ASCII",
    /** IBM500-ASCII */
    IBM500_ASCII = "IBM500-ASCII"
}
/**
 * A CloudFormation `VWS::RVS::ReceiveRule`
 *
 * @cloudformationResource VWS::RVS::ReceiveRule
 * @stability external
 */
export declare class CfnReceiveRule extends cdk.CfnResource {
    /**
    * The CloudFormation resource type name for this resource class.
    */
    static readonly CFN_RESOURCE_TYPE_NAME = "VWS::RVS::ReceiveRule";
    /**
     * Resource props.
     */
    readonly props: CfnReceiveRuleProps;
    /**
     * Attribute `VWS::RVS::ReceiveRule.Id`
     */
    readonly attrId: string;
    /**
     * Create a new `VWS::RVS::ReceiveRule`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: constructs.Construct, id: string, props: CfnReceiveRuleProps);
}
