import * as cdk from 'aws-cdk-lib';
import * as constructs from 'constructs';
/**
 * Configures an OIDC client and returns its credentials and metadata
 *
 * @schema CfnClientProps
 */
export interface CfnClientProps {
    /**
     * list of idp callback urls
     *
     * @schema CfnClientProps#CallbackUrl
     */
    readonly callbackUrl: string[];
    /**
     * list of allowed logout redirect urls
     *
     * @schema CfnClientProps#LogoutUrl
     */
    readonly logoutUrl?: string[];
}
/**
 * Converts an object of type 'CfnClientProps' to JSON representation.
 */
export declare function toJson_CfnClientProps(obj: CfnClientProps | undefined): Record<string, any> | undefined;
/**
 * A CloudFormation `VWS::Login::Client`
 *
 * @cloudformationResource VWS::Login::Client
 * @stability external
 */
export declare class CfnClient extends cdk.CfnResource {
    /**
    * The CloudFormation resource type name for this resource class.
    */
    static readonly CFN_RESOURCE_TYPE_NAME = "VWS::Login::Client";
    /**
     * Resource props.
     */
    readonly props: CfnClientProps;
    /**
     * Attribute `VWS::Login::Client.Id`
     */
    readonly attrId: string;
    /**
     * Attribute `VWS::Login::Client.SecretArn`
     */
    readonly attrSecretArn: string;
    /**
     * Attribute `VWS::Login::Client.Issuer`
     */
    readonly attrIssuer: string;
    /**
     * Attribute `VWS::Login::Client.AuthorizationEndpoint`
     */
    readonly attrAuthorizationEndpoint: string;
    /**
     * Attribute `VWS::Login::Client.TokenEndpoint`
     */
    readonly attrTokenEndpoint: string;
    /**
     * Attribute `VWS::Login::Client.LogoutEndpoint`
     */
    readonly attrLogoutEndpoint: string;
    /**
     * Attribute `VWS::Login::Client.UserInfoEndpoint`
     */
    readonly attrUserInfoEndpoint: string;
    /**
     * Create a new `VWS::Login::Client`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope: constructs.Construct, id: string, props: CfnClientProps);
}
