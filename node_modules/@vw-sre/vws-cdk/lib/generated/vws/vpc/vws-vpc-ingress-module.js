"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CfnIngressModule = exports.toJson_CfnIngressModulePropsResourcesSecurityGroup = exports.toJson_CfnIngressModulePropsResourcesListenerRuleIdpResponse = exports.toJson_CfnIngressModulePropsResourcesHttpsListenerWithoutLogin = exports.toJson_CfnIngressModulePropsResourcesHttpsListenerLogin = exports.toJson_CfnIngressModulePropsResourcesHttpsListener = exports.toJson_CfnIngressModulePropsResourcesHttpListener = exports.toJson_CfnIngressModulePropsResourcesLoadBalancer = exports.toJson_CfnIngressModulePropsResourcesLogBucketPolicy = exports.toJson_CfnIngressModulePropsResourcesLogBucket = exports.toJson_CfnIngressModulePropsResourcesLogin = exports.toJson_CfnIngressModulePropsParametersTargetGroup = exports.toJson_CfnIngressModulePropsParametersSubnets = exports.toJson_CfnIngressModulePropsParametersVpcId = exports.toJson_CfnIngressModulePropsParametersDomainName = exports.toJson_CfnIngressModulePropsParametersCertificateArn = exports.toJson_CfnIngressModulePropsParametersLogRetention = exports.toJson_CfnIngressModulePropsParametersScheme = exports.toJson_CfnIngressModulePropsParametersIncludeLogin = exports.toJson_CfnIngressModulePropsResources = exports.toJson_CfnIngressModulePropsParameters = exports.toJson_CfnIngressModuleProps = void 0;
// Generated by cdk-import
const cdk = require("aws-cdk-lib");
/**
 * Converts an object of type 'CfnIngressModuleProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModuleProps(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Parameters': toJson_CfnIngressModulePropsParameters(obj.parameters),
        'Resources': toJson_CfnIngressModulePropsResources(obj.resources),
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModuleProps = toJson_CfnIngressModuleProps;
/**
 * Converts an object of type 'CfnIngressModulePropsParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParameters(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'IncludeLogin': toJson_CfnIngressModulePropsParametersIncludeLogin(obj.includeLogin),
        'Scheme': toJson_CfnIngressModulePropsParametersScheme(obj.scheme),
        'LogRetention': toJson_CfnIngressModulePropsParametersLogRetention(obj.logRetention),
        'CertificateArn': toJson_CfnIngressModulePropsParametersCertificateArn(obj.certificateArn),
        'DomainName': toJson_CfnIngressModulePropsParametersDomainName(obj.domainName),
        'VpcId': toJson_CfnIngressModulePropsParametersVpcId(obj.vpcId),
        'Subnets': toJson_CfnIngressModulePropsParametersSubnets(obj.subnets),
        'TargetGroup': toJson_CfnIngressModulePropsParametersTargetGroup(obj.targetGroup),
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParameters = toJson_CfnIngressModulePropsParameters;
/**
 * Converts an object of type 'CfnIngressModulePropsResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResources(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Login': toJson_CfnIngressModulePropsResourcesLogin(obj.login),
        'LogBucket': toJson_CfnIngressModulePropsResourcesLogBucket(obj.logBucket),
        'LogBucketPolicy': toJson_CfnIngressModulePropsResourcesLogBucketPolicy(obj.logBucketPolicy),
        'LoadBalancer': toJson_CfnIngressModulePropsResourcesLoadBalancer(obj.loadBalancer),
        'HttpListener': toJson_CfnIngressModulePropsResourcesHttpListener(obj.httpListener),
        'HttpsListener': toJson_CfnIngressModulePropsResourcesHttpsListener(obj.httpsListener),
        'HttpsListenerLogin': toJson_CfnIngressModulePropsResourcesHttpsListenerLogin(obj.httpsListenerLogin),
        'HttpsListenerWithoutLogin': toJson_CfnIngressModulePropsResourcesHttpsListenerWithoutLogin(obj.httpsListenerWithoutLogin),
        'ListenerRuleIdpResponse': toJson_CfnIngressModulePropsResourcesListenerRuleIdpResponse(obj.listenerRuleIdpResponse),
        'SecurityGroup': toJson_CfnIngressModulePropsResourcesSecurityGroup(obj.securityGroup),
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResources = toJson_CfnIngressModulePropsResources;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersIncludeLogin' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersIncludeLogin(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersIncludeLogin = toJson_CfnIngressModulePropsParametersIncludeLogin;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersScheme' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersScheme(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersScheme = toJson_CfnIngressModulePropsParametersScheme;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersLogRetention' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersLogRetention(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersLogRetention = toJson_CfnIngressModulePropsParametersLogRetention;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersCertificateArn' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersCertificateArn(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersCertificateArn = toJson_CfnIngressModulePropsParametersCertificateArn;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersDomainName' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersDomainName(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersDomainName = toJson_CfnIngressModulePropsParametersDomainName;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersVpcId' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersVpcId(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersVpcId = toJson_CfnIngressModulePropsParametersVpcId;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersSubnets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersSubnets(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersSubnets = toJson_CfnIngressModulePropsParametersSubnets;
/**
 * Converts an object of type 'CfnIngressModulePropsParametersTargetGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsParametersTargetGroup(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsParametersTargetGroup = toJson_CfnIngressModulePropsParametersTargetGroup;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesLogin' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesLogin(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesLogin = toJson_CfnIngressModulePropsResourcesLogin;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesLogBucket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesLogBucket(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesLogBucket = toJson_CfnIngressModulePropsResourcesLogBucket;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesLogBucketPolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesLogBucketPolicy(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesLogBucketPolicy = toJson_CfnIngressModulePropsResourcesLogBucketPolicy;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesLoadBalancer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesLoadBalancer(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesLoadBalancer = toJson_CfnIngressModulePropsResourcesLoadBalancer;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesHttpListener' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesHttpListener(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesHttpListener = toJson_CfnIngressModulePropsResourcesHttpListener;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesHttpsListener' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesHttpsListener(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesHttpsListener = toJson_CfnIngressModulePropsResourcesHttpsListener;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesHttpsListenerLogin' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesHttpsListenerLogin(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesHttpsListenerLogin = toJson_CfnIngressModulePropsResourcesHttpsListenerLogin;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesHttpsListenerWithoutLogin' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesHttpsListenerWithoutLogin(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesHttpsListenerWithoutLogin = toJson_CfnIngressModulePropsResourcesHttpsListenerWithoutLogin;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesListenerRuleIdpResponse' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesListenerRuleIdpResponse(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesListenerRuleIdpResponse = toJson_CfnIngressModulePropsResourcesListenerRuleIdpResponse;
/**
 * Converts an object of type 'CfnIngressModulePropsResourcesSecurityGroup' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
function toJson_CfnIngressModulePropsResourcesSecurityGroup(obj) {
    if (obj === undefined) {
        return undefined;
    }
    const result = {
        'Type': obj.type,
        'Properties': obj.properties,
    };
    // filter undefined values
    return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : (Object.assign(Object.assign({}, r), { [i[0]]: i[1] })), {});
}
exports.toJson_CfnIngressModulePropsResourcesSecurityGroup = toJson_CfnIngressModulePropsResourcesSecurityGroup;
/* eslint-enable max-len, quote-props */
/**
 * A CloudFormation `VWS::VPC::Ingress::MODULE`
 *
 * @cloudformationResource VWS::VPC::Ingress::MODULE
 * @stability external
 */
class CfnIngressModule extends cdk.CfnResource {
    /**
     * Create a new `VWS::VPC::Ingress::MODULE`.
     *
     * @param scope - scope in which this resource is defined
     * @param id    - scoped id of the resource
     * @param props - resource properties
     */
    constructor(scope, id, props) {
        super(scope, id, { type: CfnIngressModule.CFN_RESOURCE_TYPE_NAME, properties: toJson_CfnIngressModuleProps(props) });
        this.props = props;
    }
}
exports.CfnIngressModule = CfnIngressModule;
/**
* The CloudFormation resource type name for this resource class.
*/
CfnIngressModule.CFN_RESOURCE_TYPE_NAME = "VWS::VPC::Ingress::MODULE";
//# sourceMappingURL=data:application/json;base64,