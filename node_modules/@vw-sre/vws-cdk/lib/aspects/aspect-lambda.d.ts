import { IAspect } from 'aws-cdk-lib';
import { IVpc, SecurityGroup, SubnetSelection } from 'aws-cdk-lib/aws-ec2';
import { IConstruct } from 'constructs';
/**
 * usage: Aspects.of(scope).add(new LambdaVPCAspect(vpc, sg))
 *  @param vpc VPC to add to all lambda functions that are not bound to a vpc. <br/>
 *       <i>Use a CfnSharedVpc#vpn for this, in order to use the CDK custom resources like BucketDeployment</i>
 *  @param securityGroup security group all the lambdas functions will be assigned to
 */
export declare class LambdaVPCAspect implements IAspect {
    private vpc;
    private securityGroup;
    private subnetSelection?;
    static readonly LAMBDA_VPC_MANAGED_POLICY_NAME: string;
    static readonly LAMBDA_BASIC_MANAGED_POLICY_NAME: string;
    constructor(vpc: IVpc, securityGroup: SecurityGroup, subnetSelection?: SubnetSelection | undefined);
    /**
     * All aspects can visit an IConstruct.
     */
    visit(node: IConstruct): void;
    private patchFunction;
    private patchRole;
    private getVpcConfig;
    private mapToString;
}
